#+title: cc-practice-break
#+author: Marcus Birkenkrahe [pledged]
#+startup: overview hideblocks indent
#+property: header-args:C :main yes :includes <stdio.h> :exports both :noweb yes
* Problem

Claim: The ~break~ only gets you out of the ~switch~ but not the ~while~
statement.

#+begin_example C
  while (...) {
    switch (...) {
       ...
       break;
     ...
    }
  }
#+end_example

1) Open Emacs, create a file, put in the appropriate header,
   and construct an example demonstrating this behavior of ~break~.

2) For the ~while~ loop, re-use the counting program, counting up
   from 1 to 3.

3) For the ~switch ... case~ selection, label the cases 1,2,3 and
   print the label.

* Solution

#+name: pseudo:breakDemo
#+begin_example C
  while integer less or equal than 3
    switch integer
      1: print "one" and break
      2: print "two" and break
      3: print "three" and break

#+end_example

#+name: pgm:breakDemo
#+begin_src C :results output
   int i = 0;
  while ( i <= 3) {
    switch (i)
      {
      case 1:
        puts("one");
        break;
      case 2:
        puts("two");
        break;
      case 3:
        puts("three");
        break;
      }
    printf("while %d <= 3\n", i++);
    puts("still here");
   }
#+end_src

#+RESULTS: pgm:breakDemo
#+begin_example
while 0 <= 3
still here
one
while 1 <= 3
still here
two
while 2 <= 3
still here
three
while 3 <= 3
still here
#+end_example
