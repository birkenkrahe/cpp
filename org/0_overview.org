#+TITLE:COURSE OVERVIEW
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: CSC 100 - Introduction to programming - Spring 2024
#+STARTUP: overview hideblocks indent
#+attr_latex: :width 400px
#+caption: Dashboard of a sportscar of the 1970s
[[../img/cover.jpg]]
* Who is your lecturer?
#+attr_latex: :width 400px
#+caption: Photo of Poppy as a puppy
[[../img/0_poppy.png]]

- ~not~ cats ~or~ dogs, but [[https://drive.google.com/file/d/1z-0cbqfXPA_6HMgIxb043CN5qCUJLEYz/view?usp=sharing][cats ~and~ dogs]]
- Physicist by training ([[https://images.nature.com/original/magazine-assets/d41586-022-01388-6/d41586-022-01388-6_20499086.jpg][Particle smash and grab]])
- Teacher by profession ([[https://m.media-amazon.com/images/I/91UJz-ti6BL.jpg]["Automatic transmission for ideas"]] - Lisa)
- Data scientist by choice ([[https://media.wired.com/photos/601c6246898afb612573ad4c/master/w_960,c_limit/BLACK%20SUN%20#34.jpg]["Master patterner"]] - LeGuin)
- Lyon College since 2021 ([[https://www.visitberlin.de/system/files/styles/visitberlin_hero_visitberlin_desktop_2x/private/image/eberswalderstrasse26_c_visitBerlin_Foto_Dagmar_Schwelle_web.jpg?h=1c9b88c9&itok=xMVdiKwM][Migrated from Berlin, Germany]])

* My first programming languages
#+attr_latex: :width 400px
#+caption: Texas Instruments TI-99/4 16-bit microcomputer, 1979
[[../img/0_ti99.jpg]]

- My first programming languages:
  1) [[https://upload.wikimedia.org/wikipedia/commons/7/7b/AtariBASIC.png][BASIC]] - Beginner's All-purpose Symbolic Instruction Code (1979)
  2) FORTRAN - FORMula TRANslator (1985)
  3) C++ (1989)

- How many programming languages are there today?
  #+begin_notes
  Answer: more than 500 languages were used on GitHub
  in 2022. Overall, almost 9,000 languages are known.
  #+end_notes

* The importance of infrastructure
#+attr_latex: :width 400px
#+caption: Layers between you and a document on your computer
[[../img/0_infrastructure.jpg]]

- There are many layers between your input and the CPU.
- Most of the software enabling you to do stuff is written in C.
- The primary software to connect to the OS is the shell program.

* What do you expect from this course?
#+attr_latex: :width 400px
#+caption: Dandelion in the grass, by Aaron Burden, @Unsplash
[[../img/0_expectations.jpg]]

Your top selections:

* What careers do our students have?
#+attr_latex: :width 400px
[[../img/careers.png]]

*Where our CS and DS graduates went to work in the last 2 years:*
+ Full stack developer @OneBrief (military planning software)
+ Computer Aided Design at Bad Boy Mowers (comp sci/math/engineering)
+ IT project specialist at Bad Boy Mowers (data science/math/comp sci)
+ Data analyst at Future Fuel Chemical (data science/comp sci)
+ Database specialist at the Department of Homeland Security
+ Software engineer at Riot Games (League of Legends/game company)
+ Cybersecurity engineer at Sierra Nevada (aircraft engineering)
+ Head of data analysis at Enterprise Inc. (rental cars)
+ Programmer at Outlaw Snax Chips (snack foods)
+ Manager Enterprise Applications at Lyon College IT Services

* What will you do in this course?
#+attr_latex: :width 300px
#+caption: Syllabus, Canvas (lyon.instructure.com) or GitHub (github.com/birkenkrahe/cpp)
[[../img/0_schedule.png]]

- We have a *textbook* - King, C Programming - A modern approach (2008)
- We have an *operating system* - Linux (if you're lucky), Windows/MacOS
- We have (more than) an *editor* - Emacs + Org-mode
- We have a *compiler* - GCC ([[https://raw.githubusercontent.com/birkenkrahe/cc/piHome/img/0_gcc_mac.png][also on a Mac]])

Do you know what to do with these?

* GCC installation on MacOS (ask ChatGPT)

#+begin_notes
How can I install the GNU gcc compiler on MacOS?

[AI]: To install the GNU gcc compiler on MacOS, you can use the
Homebrew package manager. Follow these steps:

1. Open a Terminal window.

2. Install Homebrew by entering the following command and following
   the on-screen instructions:
```
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
```
3. Once Homebrew is installed, you can install gcc by entering the
   following command:
```
brew install gcc
```
This will install the latest version of gcc available through Homebrew.

4. After the installation is complete, you can verify that gcc is
   installed by running the following command:
```
gcc --version
```
This command should display the version of gcc that you have installed.

That's it! You should now have the GNU gcc compiler installed on your
MacOS system.
#+end_notes

The following two answers came from ChatGPT, a conversational machine
learning model created by OpenAI.
#+attr_latex: :width 400px
#+caption: First answer on how to install GCC on MacOS
[[../img/0_gcc_mac.png]]
#+attr_latex: :width 400px
#+caption: Second answer on how to install GCC on MacOS 
[[../img/0_gcc_mac_new.png]]
   
* How will you be evaluated?
#+attr_latex: :width 400px
#+caption: Source: syllabus, Canvas (lyon.instructure.com) or GitHub (github.com/birkenkrahe/ml)
[[../img/0_grades.png]]

- All course requirements have deadlines
- Late submissions will be penalized (loss of points)
- Final exam will be sourced by term test questions
- Programming assignments are home assignments
- In-class practices are "literate programming" exercises

* Which tools are you going to use?
#+attr_latex: :width 400px
#+caption: Unsplash, workshop
[[../img/0_tools.jpg]]

- [[https://lyon.instructure.com/][Canvas]] (learning management system)

- [[https://github.com/birkenkrahe/cc][GitHub repository]] (all course materials except tests)

- [[https://github.com/birkenkrahe/org/blob/master/FAQ.org][GNU Emacs]] (literate programming environment)

- [[https://en.wikipedia.org/wiki/Command-line_interface][Command line interface]] / interpreter - (shell / replit.com)[fn:1]

* The (new) Canvas LMS
#+attr_latex: :width 400px
#+caption: Canvas
[[../img/0_canvas.png]]

- Announcements
- Assignments (Programming assignments and in-class practice)
- Zoom links (participate/cloud recording)
- Course links (GitHub, Whiteboard)
- Gradebook

* The (popular) GitHub platform
#+attr_latex: :width 400px
#+caption: My GitHub dashboard - close to 4,000 commits in 2022 (100,000 lines of code?)
[[../img/0_github.png]]

- [[https://github.com/birkenkrahe][GitHub]] is the most popular software development platform.

- It's now owned by Microsoft (which is becoming a problem)

- Here for you: all course materials, and the course FAQ

* The (feared) Emacs editor
#+attr_latex: :width 400px
#+caption: My GitHub dashboard
[[../img/0_litprog.png]]

* DONE Practice: first "literate" C program!
#+attr_latex: :width 400px
#+caption: Books aren't the only way to be "literate" in programming!
[[../img/0_books.png]]

(You can find a [[https://github.com/birkenkrahe/cc/blob/piHome/pdf/first_org_print.pdf][PDF of this exercise]] on GitHub)

Let's set Emacs up, write and run a first "literate" C program!

1) Open the command line terminal with ~CMD~ in the search field

2) At the prompt, type ~gcc --version~

3) Open https://github.com/birkenkrahe/org/ in a browser

4) Navigate to the repository ~emacs~ in GitHub

5) Click on the file name ~.emacs~ to open it

6) Open the ~Raw~ version of this file (there's a button)

7) Right click to ~Save as~ and save file as ~emacs.txt~ in ~/Downloads~

8) Open a terminal by entering ~CMD~ in the Windows search bar

9) Pin the terminal to your taskbar

10) At the prompt, enter ~DIR emacs.txt~ - you should see the file

11) At the prompt, enter ~emacs --version~

12) Enter ~emacs -nw -l emacs.txt~

13) Inside Emacs, click ~<F10>~ and ~ENTER~ to open a new file

14) At the prompt at the bottom of the screen, enter ~first.org~

15) Enter the following text (replace ~yourname~ with your own name):
    #+attr_latex: :width 400px
    [[../img/0_first.png]]

16) Run the program by putting the cursor anywhere on the code block
    and typing ~CTRL-c CTRL-c~ (or ~C-c C-c~)

17) Tangle the code with ~C-c C-v t~ (or ~M-x org-babel-tangle~)
    #+attr_latex: :width 400px
    #+caption: What happens when you tangle or weave a literate program
    [[../img/0_litprog1.png]]

18) Open a shell (terminal program) with ~ALT-x eshell~

19) At the prompt, enter ~ls -l first*~ - you should see ~first.C~

20) Enter ~gcc first.C -o hello~

21) Enter ~hello~ to run the program.

22) Upload ~first.org~ as your first in-class assignment [[https://lyon.instructure.com/courses/1041/assignments/5889][to Canvas!]]

* When is the first assignment due?
#+attr_latex: :width 400px
#+caption: Four monks by Claudio Rinaldi (1852-1909)
[[../img/0_monks.png]]

- The first in-class assignment (~first.org~, see Canvas) is due on
  Friday, January 27. For late submissions, you lose 1 point per day
  (out of 10 possible points)

- The first home assignment (~Emacs tutorial~, see Canvas) is due on
  Monday, January 27. For late submissions, you lose 1 point per day
  (out of 10 possible points)
  
- We'll write the first weekly multiple-choice test on January 23,
  covering all of the material that was covered until then.

* What are you looking forward to?
#+attr_latex: :width 400px
[[../img/0_package.jpg]]

* Next
#+attr_latex: :width 400px
#+caption: Introduction to C programming
[[../img/0_gnuemacs.png]]

#+attr_latex: :width 400px
#+caption: Introduction to C programming
[[../img/0_cprogramming.png]]

* Glossary

| TERM                  | MEANING                                       |
|-----------------------+-----------------------------------------------|
| Meta data             | Data about data (e.g. layout instructions)    |
| Infrastructure        | Computing roadworks: hardware and software    |
| Editor                | Program to write programs in                  |
| Compiler              | Program to turn source into machine code      |
| ~gcc~                   | The GNU C compiler                            |
| Source code           | Code for humans to read and edit (~.c~)         |
| Machine code          | Code for machines to execute (~.exe~)           |
| [[https://en.wikipedia.org/wiki/Git][Git]]                   | Software version control system (2005)        |
| [[https://www.gnu.org/software/emacs/][Emacs]]                 | Extensible editor written in Lisp (1985)      |
| FOSS                  | Free and Open Source Software                 |
| [[https://en.wikipedia.org/wiki/Linux][Linux]]                 | FOSS operating system (1991)                  |
| Windows, MacOS        | Commercial OS (Microsoft, Apple)              |
| Android               | Linux for smartphones (Google)                |
| iOS                   | MacOS for Apple smartphones                   |
| Command line          | Terminal, shell program to talk to the OS     |
| Prompt                | Location on your computer, e.g. ~C:\User\~      |
| Raw file              | No control characters for syntax highlighting |
| Syntax highlighting   | Making programming language visible           |
| ~DIR~                   | Windows command to list files                 |
| ~cd~                    | Command to change directory                   |
| Literate pgm          | Doc + code + output for humans and machines   |
| Org-mode              | Plugin for Emacs to edit Org files (~.org~)     |
| Dunning-Kruger effect | Illustrating ignorance of your own ignorance  |

* References

- King K N (2008). C Programming - A Modern Approach. Norton.

* Footnotes

[fn:1] A command line prompt is the place in the CLI where you type
commands for the computer. It typically includes text that indicates a
location on your computer, e.g. ~c:/Users/birkenkrahe>~
