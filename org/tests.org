#+property: header-args:R :session *R* :results output :exports both
#+STARTUP: hideblocks overview indent :
* R 
** Import data from CSV file

#+begin_src R :session *R* :results output :exports both :noweb yes
  df <- read.csv('../data/test_1-4.csv',header=TRUE)
                                          #df <- df[,c(2,3,4)] # remove first column (ID)
  df <- df[,-1] # remove first column (ID)  
  names(df) <- c('t1','t2','t3','t4') # change column names
  df <- df[-dim(df)[1],] # remove last row (Test User)
  str(df)
#+end_src

#+RESULTS:
: 'data.frame':	21 obs. of  4 variables:
:  $ t1: num  4.83 13 16.33 19.07 16.83 ...
:  $ t2: num  10 11 8.5 14.5 12 ...
:  $ t3: num  8.96 24.31 20.92 24 22.03 ...
:  $ t4: num  8.5 9 10.2 12.8 8 ...

** Statistical summary:

#+begin_src R :session *R* :results output :exports both :noweb yes
  summary(df)
#+end_src

#+RESULTS:
:        t1              t2              t3              t4       
:  Min.   : 4.83   Min.   : 3.50   Min.   : 7.25   Min.   : 6.00  
:  1st Qu.:15.50   1st Qu.: 9.50   1st Qu.:19.31   1st Qu.: 8.50  
:  Median :16.74   Median :10.33   Median :20.68   Median :10.25  
:  Mean   :15.28   Mean   :10.35   Mean   :19.83   Mean   : 9.94  
:  3rd Qu.:17.33   3rd Qu.:11.33   3rd Qu.:22.45   3rd Qu.:11.25  
:  Max.   :19.07   Max.   :14.50   Max.   :24.31   Max.   :14.00  
:                                  NA's   :1

** Scale to percentages:

#+begin_src R
  df$t1 <- (df$t1 / 20) * 100
  df$t2 <- (df$t2 / 15) * 100
  df$t3 <- (df$t3 / 25) * 100
  df$t4 <- (df$t4 / 15) * 100  
  df
#+end_src

#+RESULTS:
#+begin_example
      t1       t2    t3       t4
1  24.15 66.66667 35.84 56.66667
2  65.00 73.33333 97.24 60.00000
3  81.65 56.66667 83.68 68.33333
4  95.35 96.66667 96.00 85.00000
5  84.15 80.00000 88.12 53.33333
6  50.00 63.33333 29.00 50.00000
7  90.00 68.86667 83.20 66.66667
8  77.50 71.13333 96.04 70.00000
9  84.15 86.66667 91.68 93.33333
10 87.50 64.46667 75.92 60.00000
11 57.50 71.13333 79.04 76.66667
12 79.15 68.86667 77.68 75.00000
13 85.00 70.00000 92.68 56.66667
14 54.15 23.33333 67.32 40.00000
15 81.65 67.80000 80.08 73.33333
16 87.50 63.33333 89.16 68.33333
17 87.50 83.33333 83.88 76.66667
18 83.70 80.00000 81.84 68.33333
19 86.65 54.46667 75.72 70.00000
20 84.15 75.53333 82.28 76.66667
21 77.50 63.33333    NA 46.66667
#+end_example

** Create boxplots:
#+begin_src R :results output graphics file :file ../img/test_1-4_box.png :exports both
  par(mfrow=c(4,1))
  ## test 1
  boxplot(df$t1,
          main="Test 1 - Orientation and programming",
          horizontal=TRUE,
          col="lightgreen",
          ylim=c(20,100),
          xaxt='n')
  axis(side=1,
       at=seq(0,100,by=10),
       labels=paste(seq(0, 100, by=10), "%"))
  ## test 2
  boxplot(df$t2,
          main="Test 2 - Introduction to C/C++ and first literate program",
          horizontal=TRUE,
          col="lightblue",
          ylim=c(20,100),
          xaxt='n')
  axis(side=1,
       at=seq(0,100,by=10),
       labels=paste(seq(0, 100, by=10), "%"))
  ## test 3
  boxplot(df$t3,
          main="Test 3 - C variables, Emacs, and literate programming",
          horizontal=TRUE,
          col="peachpuff",
          ylim=c(20,100),
          xaxt='n')
  axis(side=1,
       at=seq(0,100,by=10),
       labels=paste(seq(0, 100, by=10), "%"))
  ## test 4
  boxplot(df$t4,
          main="Test 4 - printf and scanf",
          horizontal=TRUE,
          col="lightyellow",
          ylim=c(20,100),
          xaxt='n')
  axis(side=1,
       at=seq(0,100,by=10),
       labels=paste(seq(0, 100, by=10), "%"))
#+end_src

#+RESULTS:
[[file:../img/test_1-4_box.png]]

* Python

** Import data



** Summarize data
** Transform data
** Plot data

* TODO C++

