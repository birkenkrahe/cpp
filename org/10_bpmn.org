#+TITLE: BPMN - BUSINESS PROCESS MODEL AND NOTATION
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:CSC100 Introduction to programming in C/C++ (Spring 2024)
#+STARTUP: overview hideblocks indent inlineimages
#+OPTIONS: toc:nil ^:nil author:nil date:nil
#+PROPERTY: header-args:C :main yes :includes <stdio.h> :exports both :results output :noweb yes :tangle yes
* README

- In this section of the course, we go beyond simple statements and
  turn to program flow and evaluation of logical conditions

- This section follows chapter 3 in Davenport/Vine (2015) and
  chapters 4 and 5 in King (2008)

* Process models

*Objectives:*
- Understand what a process manager (software) is and does
- Learn the basics of Business Process Model and Notation (BPMN)
- Learn how to create simple models in BPMN
- Apply modeling skills to creating pseudocode models
- Adding accurate Pseudocode/BPMN models to future programming
  assignments will give you bonus points.

* Overview

- Flowcharts are popular among computing analysts and programmers

- Flowcharts are a special case of *process models*

- Process modeling is a key 21st century skill, because *process* is the
  central paradigm of modern work organization

- Rather than use flowcharts, we use BPMN - Business Process Model and
  Notation - see figure below for an overview of the whole language
  (you can get this poster at [[https://www.signavio.com/downloads/short-reads/free-bpmn-2-0-poster/][SAP Signavio]]) - see [[https://raw.githubusercontent.com/birkenkrahe/cpp/main/img/bpmn.png][copy in GitHub]].

  #+name: bpmnfig
  #+attr_html: :width 600px
  #+caption: (Free) BPMN 2.0 poster from SAP Signavio
  [[../img/bpmn.png]]

* BPMN platform - extended example

- We use ~bpmn.io~ for free process modeling.
  
- Example process:
  1) start with a (named) *pool.*
  2) *name* the pool according to the process owner (e.g. "Programmer").
  3) begin the pool with a *start* event, e.g. *Start*.
  4) append a *task* or an *event* (e.g. an *end* event)
  5) *name* all elements of the process (including flow and gateways)
  6) model decisions as *gateway* (and rejoin the flow)
  7) model *external* participants as (empty) pools
  8) connect pools with *message* flow
  9) connect elements inside a pool with *sequence* flow
     
- Example diagram for the following process:
  #+begin_example
    // Process model for the creation/storing of a process model
    
    Begin
       - Create process model -- note: use bpmn.io
       - Decide to save model as SVG image or as XML file
       - Store model as .svg or as .bpmn file on PC
    End
  #+end_example

- Implementation: 
  1) Process owner = "Programmer"
  2) Start process
  3) First task = "Create process model"
  4) Gateway = "Save process model as image?"
     - YES: "Save model as image file"
     - NO:  "Save model as BPMN file"
  5) Store model as SVG image or as BPMN model file
  6) End process

- Final result:
  #+attr_html: :width 600px:
  [[../img/bpmn_model.svg]]

* Points to remember (BPMN modeling rules)

- Every model needs a pool = process owner
- Conditions/decisions become gateways
- Use active sentences for tasks ("Make model")
- Use status description for events ("Process starts")
- When the flow is split, it must be rejoined
- All elements must be named
- Do not change the size of elements
- All elements can be "overloaded"

* BPMN elements

- Roles (pools, lanes, participants)
- Tasks (things to do)
- Events (status)
- Flow (between tasks or events)
- Gateways (decision points, condition check)

* Let's practice

- Download the practice file in the GitHub repo:
  [[http://tinyurl.com/bpmn-org][tinyurl.com/bpmn-org]] and save it as ~bpmn.org~.

- The solutions are available as PDF: tinyurl.com/bpmn-solutions-org

- There are also solution videos on my channel.

* References

- Camunda (2023). Web-based tooling for BPMN, DMN and Forms. URL:
  bpmn.io.

- Davenport/Vine (2015) C Programming for the Absolute Beginner
  (3e). Cengage Learning.

- GVSUmath (Aug 10, 2012). Proving Logical Equivalences without Truth
  Tables. [[https://youtu.be/iPbLzl2kMHA][URL: youtu.be/iPbLzl2kMHA]].

- Kernighan/Ritchie (1978). The C Programming Language
  (1st). Prentice Hall.

- King (2008). C Programming - A modern approach (2e). W A Norton.

- Orgmode.org (n.d.). 16 Working with Source Code. [[https://orgmode.org/manual/Working-with-Source-Code.html][URL: orgmode.org]]

