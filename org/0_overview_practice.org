#+title: Course Overview Practice Assignment: First C Program
#+author: Marcus Birkenkrahe
#+subtitle: Introduction to Programming - Spring 2023 - Lyon College
#+startup: overview hideblocks indent
#+options: toc:nil num:nil ^:nil
* Practice: first C program! (15 min)
Let's set emacs up, write and run a first "literate" c program! it is
very important that you enter everything *exactly as shown*. if you get
something wrong just go back one step. Contact me if you need me after
checking with your neighbor if he or she can help.

1) Open the command line terminal with ~cmd~ in the search field and pin
   the app to the task bar to open it more quickly next time.

2) At the prompt, type ~gcc --version~ - this should tell you the
   location of the C compiler, GNU CC.

3) Open the Windows search field and type ~notepad~, then open the
   app. You can also pin it to the taskbar. This is your editor now.

4) Pin the terminal to your taskbar to open it quickly next time!

5) In the ~notepad~ app window, enter the following lines - don't miss
   a single character, including empty 'whitespace':
   #+begin_example
     #include <stdio.h>

     int main (void)
     {
        puts("Hello, world!");
        return 0;
     }
   #+end_example

6) Save the file with ~CTRL + s~ to the name: ~hello.c~. Pay attention to
   the file location on your computer, e.g. ~This PC > Downloads~.

7) Close the ~notepad~ app.

8) Open the CMD line terminal again.

9) Go to the location of your ~hello.c~ file by entering ~cd~ followed by
   the location, e.g. ~cd Downloads~ or ~cd C:\~.

10) Make sure your file is there and ready by entering ~type
    hello.c~. You should now see it on the screen.

11) Compile the program by entering ~gcc hello.c~. If all is well,
    you'll get no response, just another prompt.

12) At the prompt, enter ~DIR hello.c a.exe~ - this will give you
    information about your C file and the executable machine file.

13) Run the program by entering ~a.exe~.

14) Now compile the program again with the command ~gcc hello.c -o hello~.

15) Your executable (the compiler's output) is now called ~hello~.

16) Check that by entering ~hello~ at the prompt. You should get your
    output ~Hello, world!~ on the screen.

17) Now open ~hello.c~ again using ~notepad~ and at the top add the line:
    #+begin_example
    // Hello world program by [yourname] (Pledged)
    #+end_example

18) Save it again and submit it as your first in-class assignment:
    1. Open a browser to GDrive and upload the file
    2. Open the [[https://lyon.instructure.com/courses/2107/assignments/22790][assignment in Canvas]] at lyon.instructure.com
    3. Upload the file from GDrive (click on "~More~")
    4. When you see it attached, click on ~Submit Assignment~.

