#+TITLE: C Fundamentals practice - hello world
#+AUTHOR: [yourName] (pledged)
#+STARTUP: overview hideblocks indent 
#+PROPERTY: header-args:C :main yes :includes <stdio.h> :results output :exports both :comments both
* READ README

- This file is a practice file for C fundamentals. To work through it,
  you need to download the "[[https://raw.githubusercontent.com/birkenkrahe/cpp/main/org/3_hello_practice.org][raw]]" version of the file and open it in
  Emacs.

- Use an .emacs configuration file [[https://raw.githubusercontent.com/birkenkrahe/org/master/emacs/.emacs][like this one]] to enable active code
  blocks.

- If your Emacs skills are shaky, try my [[https://github.com/birkenkrahe/org/blob/master/emacs/tutorial.md][tutorial]].

- In this exercise, you will learn how to:
  1) understand and change syntax highlighting
  2) understand and use comments in C

- Time: approx. 15-30 min.

- When you're done with a section move the cursor on the section
  heading and type ~S-<right>~ (or SHIFT+<right-arrow>).

- When you leave class without having completed the file, save a copy
  to your GDrive as a backup and/or to work on it from home

- When you've completed the file, upload it to Canvas.

- Here is a [[https://youtu.be/SVLrLr_EEgA?si=xFhGFd9GMJcXdoQz][solution video]] (10 min).

* TODO Identify yourself

1) replace ~[yourName]~ in the header of this file by your name
2) add ~(pledged)~ next to your name (as in "I obey the honor code")
3) Change the "TODO" in the headline to "DONE" (~S-<right>~)
4) save the file (~C-x C-s~). 

* TODO Syntax highlighting

1) Below, create a code block named ~pgm:hello~ with a program that
   prints "Hello, world!" on the screen: Use the ~<s~ template to
   create the code block.

2) Add the header arguments ~C~ and ~:results output~ to the code block.

3) Add the preprocessor directive (~#include~), the ~main~ function, and
   the code to print with ~printf~.

4) Run the program in Emacs to make sure that it works (~C-c C-c~).

5) Open the Emacs themes chooser with ~M-x custom-themes~. In the
   buffer, uncheck the current theme and check another. Then return
   here (~C-x b~) to see the effect on your hello world program.

6) If you like a theme especially well, you save it for future
   sessions if you like by clicking on ~Save Theme Settings~. You get
   the message ~Custom theme saved for future sessions~ in the
   minibuffer.

----- Put code block here -----

* TODO Fix the program

The program [[pgm:comment1]] below should print out the sentence "~I love
my cat 'Milly'~". But it doesn't. Instead it prints:

#+begin_example
 I dog 'Milly'
#+end_example

Something went wrong with the comments. Fix the program and run it
again.

#+name: pgm:comment1 
#+begin_src C
  #include <stdio.h>

  int main()
  {
    printf("I "); /****     
                            printf("love "); 
                            printf("my ");   ****/     
    printf("cat"); 
    printf(" 'Milly'"); //* I really do! */

    return 0;
  }
  #+end_src

  #+RESULTS: pgm:comment1
  : I cat 'Milly'

* TODO Comment program

   Write short comments in the program [[pgm:comment2]] to explain what
   each part of the program does (guess if you don't know for sure) -
   comment at least whenever you see ~WRITE COMMENT HERE~.

   The program contains so-called /inline/ comments ~//~ and /multi-line/
   comments: ~/* ... */.~

   #+name: pgm:comment2
   #+begin_src C
     #include <stdio.h> // WRITE COMMENT HERE

     int main (void) // WRITE COMMENT HERE
     {
       /* 
	 WRITE COMMENT HERE */
       int i = 1;

       // WRITE COMMENT HERE
       printf("%d\n", i);

       return 0;
     }
   #+end_src
  
* TODO Upload completed file to Canvas

1) Open the [[https://lyon.instructure.com/courses/2107/assignments/23359][Class practice assignment]] on Canvas

2) Upload this Org-mode file

3) Submit assignment

