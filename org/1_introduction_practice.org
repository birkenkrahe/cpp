#+title: Course Introduction Practice Assignment: First Literate C Program
#+author: Marcus Birkenkrahe
#+subtitle: Introduction to Programming - Spring 2023 - Lyon College
#+startup: overview hideblocks indent
#+options: toc:nil num:nil ^:nil
* Practice: first "literate" C program!

- Here are these instructions on GitHub: http://tinyurl.com/helloEmacs 
- and a YouTube video (30 min): http://tinyurl.com/firstlitprog 

Let's set Emacs up, write and run a first "literate" C program! it is
very important that you enter everything *exactly as shown*. if you get
something wrong just go back one step. Contact me if you need me after
checking with your neighbor if he or she can help.

1) Open the command line terminal with ~cmd~ in the search field

2) At the prompt, type: ~gcc --version~

3) At the prompt, type: ~emacs --version~

4) If Emacs is available, enter: ~emacs -q~ 

5) Enter: ~ALT + x eww~ to open a browser inside Emacs.

6) At the prompt, enter: ~tinyurl.com/EmacsLyon~

7) Save the downloaded file with ~CTRL + x CTRL + w~ as ~~/.emacs~ 

8) Kill the current ~*EWW*~ buffer with ~C-x k~

9) Shut Emacs down with ~C-x C-w~.

10) Restart Emacs. The file you just created, ~.emacs~, is now loaded.

11) Create a new file: ~C-x C-f~ - at the prompt, enter ~firstLit.org~.

12) Enter the following text (replace ~yourname~ with your own name):
    #+begin_example
    #+TITLE: First Literate C Program
    #+AUTHOR: [yourname] (pledged)

    * My first literate C program
      This C program runs inside an Emacs Org-mode code block:
      #+begin_src C :results output :tangle first.c
        #include <stdio.h>
        int main()
        {
            printf("Hello, Emacs!\n");
            return 0;
        }
      #+end_src
    #+end_example

13) 'Run' the program by putting the cursor anywhere on the code block
    and typing ~CTRL-c CTRL-c~. You should see the result on the screen.

14) This is your first C program! Save the file with ~CTRL + x CTRL + s~
    (in the minibuffer, you will see ~C-x C-s~).

15) 'Tangle' the code with ~CTRL + c CTRL + v t~ (or, alternatively,
    with ~ALT + x org-babel-tangle RET~): Emacs reports ="Tangled 1 code
    block from first.org"= in the minibuffer.

16) 'Weave' the document from the literate file with ~C-c C-e~ followed
    by ~h~ ~o~ to open the document as HTML in a browser.
    
    #+attr_latex: :width 400px
    #+caption: What happens when you tangle or weave a literate program
    [[../img/0_litprog1.png]]

17) Open a shell inside Emacs by entering: ~ALT-x eshell~

18) At the =$= prompt, enter ~ls -l first*~ - you should see ~first.c~ listed

19) Display ~first.c~ by entering ~cat first.c~

20) Enter ~gcc first.c -o hello~ to compile the C program into an executable

21) Enter ~hello~ to run the executable. You should see the output.

22) Exit and close Emacs with ~CTRL-x CTRL-c~

23) Exit and close the shell by entering ~exit~ after the prompt

24) Save your file to a directory on your GDrive (you can do this from
    GDrive in a browser, with File Explorer, or directly in Emacs with
    the following commands (you don't have to worry about spaces
    etc. because you can auto-complete using the <TAB> key):
    #+begin_example elisp
    C-x C-w                   ;; write file
    w:/My Drive/              ;; target directory
    C-x d w:/My Drive/        ;; open target directory
    s                         ;; sort to see recent files at top
    #+end_example
    You can also do it in the Emacs eshell that you used earlier to
    compile and run the file on the shell (auto-complete with <TAB>):
    #+begin_example bash
    cp first.org w:/My\ Drive/      # copy file to target directory
    cat w:/My\ Drive/first.org      # view copy of file at target location
    #+end_example

25) Upload ~first.org~ as your first 'literate' in-class assignment:
    1. Open a browser to GDrive and upload the file
    2. Open the [[https://lyon.instructure.com/courses/2107/assignments/22790][assignment in Canvas]] at lyon.instructure.com
    3. Upload the file from GDrive (click on "~More~")
    4. When you see it attached, click on ~Submit Assignment~.

* What did you just learn?

You learnt:
1) How to open and close the GNU Emacs editor.
2) How to create, save, and write an Emacs Org-mode file.
3) How to create, compile, and run a C program inside Emacs.
4) How to tangle a literate program into source code.
5) How to save a file on your GDrive in three ways.
6) How to submit a completed assignment to Canvas.

It would be worth repeating these steps on your own without peeking in
your notes to make sure that you understood what you did and that you
can do it again - we'll do this hundreds of times in class!

You can watch me complete this exercise [[https://youtu.be/zRgIaJzrbnY?si=NwOl0u9Nr06FkkoU][in this video]] (30').
