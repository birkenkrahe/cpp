#+TITLE:C pointers practice
#+AUTHOR: yourName [pledged]
#+STARTUP: overview hideblocks indent
#+OPTIONS: toc:1 num:nil ^:nil
#+PROPERTY: header-args:C :main yes :includes <stdio.h> :exports both :results output :comments both
* README

  * Practice workbook for pointers in C
  * See GitHub for script/solutions

* TODO Identify yourself

- replace the placeholder ~[yourName]~ in the header of this file by
  your name and save the file (~C-x C-s~).

* TODO Indirection operator ~*~ 

Put the code [[https://github.com/birkenkrahe/cc/blob/piHome/img/16_indirection.png][from this diagram]] into the code block below and run it
to confirm the claims.
  - Make sure you declare your variables!
  - Comment your code to indicate you know what you're doing

#+begin_src C
  /* demonstrate pointer arithmetic */
  
#+end_src    

* TODO Initializing pointers

- The initialization of the pointer ~iPtr~ in the following code
  block went wrong:
  - Fix the initialization so that the pointer is assigned an
    address, not a value
  - Print the pointer variable ~ptr~, the address and value of ~x~

  #+begin_src C
    double x = 3.14159;
    double *ptr;

    // initialize pointer
    ptr = x;      // ptr is assigned the address of x
    ptr = 2.71828; // value of x is indirectly changed to e

    // print pointer, address and value of i
    ...
  #+end_src

* TODO Fix the program

- The following function supposedly computes the sum and average of
  the numbers in the array ~a~, which has length ~n~. The variables ~avg~
  and ~sum~ /point/ to variables that the function should modify.

  Unfortunately, the function contains several errors:
  - find and correct them so that the code compiles

  #+name: sum1
  #+begin_src C :results silent
    void avg_sum (double a[], int n, double *avg, double *sum) {
      int i;
      sum = 0.0;
      for (i = 0; i < n; i++) {
        sum += a[i];
      }
      avg = sum / n;
    } // end of function
  #+end_src

